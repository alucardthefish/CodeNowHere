name: Build Release

on:
  release:
    types: [created]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies (Linux)
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y build-essential cmake

      - name: Install dependencies (macOS)
        if: runner.os == 'macOS'
        run: brew install cmake

      - name: Install dependencies (Windows)
        if: runner.os == 'Windows'
        run: choco install cmake nsis

      - name: Configure CMake
        run: cmake -S . -B build -DCMAKE_INSTALL_PREFIX=build/install

      - name: Build project
        run: cmake --build build --config Release

      - name: Package release with CPack
        run: |
          cd build
          cpack
          cd ..

      - name: Find and upload release artifacts
        run: |
          # Dynamically find the generated files
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            FILE=$(find build -name "cnh-linux-*.deb")
          elif [ "${{ matrix.os }}" == "macos-latest" ]; then
            FILE=$(find build -name "cnh-macos-*.dmg")
          elif [ "${{ matrix.os }}" == "windows-latest" ]; then
            FILE=$(find build -name "cnh-windows-*.exe")
          fi

          # Upload the artifact
          echo "Uploading $FILE"
          gh release upload ${{ github.event.release.tag_name }} "$FILE" --clobber